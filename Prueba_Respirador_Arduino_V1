//designo un numero de pin a cada elemento del respirador y los declaro como variables numericas

int pin_switch_ONOFF = 2;      //Este boton esta en el protoboard. Cuando esta prendido enciende led verde y energiza algun pin que yo quiera. Cuando esta apagado prende led rojo
int pin_led_verde= 3;          //Este led verde esta en el protoboard. Indica que el pin energizador estara con voltaje/energizado
int pin_led_rojo= 4;           //Este led rojo esta en el protoboard. Indica que el pin energizador estara sin voltaje

int pin_motor = 13;            //Este pin enciende el motor soplador de aire

int pin_valvula_1A = 12;       //Esta valvula es la que comunica la salida del soplador de aire con el tubo que va al paciente
int pin_valvula_1B = 11;       //Esta valvula es la que comunica la salida del soplador de aire con el tubo de escape (valvula de alivio)

int pin_valvula_3A = 10;       //Esta valvula es la que comunica el tubo de exalacion del paciente con la entrada al motor aspirador/soplador
int pin_valvula_3B = 9;        //Esta valvula es la que comunica la entrada del motor aspirador/soplador a la toma de aire externa (no del paciente)

int pin_valvula_2 = 8;         //Esta valvula es la que esta en el medio del tubo de inspiracion, luego de los sensores 1 y 2, y antes del humidificador
                               //Esta valvula sirve para acumular presion minima necesaria antes de enviarsela al paciente a travez del humidificador

int pin_sensorpresion_1 = 5;   //Este sensor de presion monitorea la presion maxima de aire antes de enviarsela al paciente
                               //Es Normally Closed...En 0 hasta que P > 30cm de H20. If P > 30 --> enciende led S1, cierra V2, abre V1B. 
int pin_sensorpresion_2 = 6;   //Este sensor de presion monitorea la presion minima de aire antes de enviarsela al paciente
                               //Es Normally Opened...En 1 mientras que P > 5cm de H20. If P < 5 --> enciende led S2, cierra V2 por X segundos, inicia timer 
int pin_sensorpresion_3 = 7;   //Este sensor de presion monitorea la presion de aire en la boca del paciente. Es el que activa la inhalacion.
                               //Es Normally Closed...En 0 hasta que P > 10cm de H20. If P > 10 --> enciende led S3, abre V1A, cierra V1B, abre V3B, cierra V3A, enciende motor, inicia timer 
//int pin_sensorpresion_4 = XX;   //Este sensor de presion monitorea la presion minima de aire en el tubo de exalacion (asegura PEEP en tubo excalacion).
                                  //Es Normally Closed...Es 0 hasta que P < 5cm de H20. If P < 5 -->  enciende led S4, cierra V3A por X segunds, inicia timer
                               
//.............................................................................................................
//defino el rol de cada pin. (Input pullup quiere decir impedancia infinita, sirve para botones).

void setup() {
  pinMode(pin_switch_ONOFF, INPUT_PULLUP);
  pinMode(pin_led_rojo, OUTPUT);
  pinMode(pin_led_verde, OUTPUT);
  
  pinMode(pin_motor, OUTPUT);
   
  pinMode(pin_valvula_1A, OUTPUT); 
  pinMode(pin_valvula_1B, OUTPUT);
  pinMode(pin_valvula_3A, OUTPUT);
  pinMode(pin_valvula_3B, OUTPUT);
  pinMode(pin_valvula_2, OUTPUT);

  pinMode(pin_sensorpresion_1,OUTPUT); 
  pinMode(pin_sensorpresion_2,OUTPUT); 
  pinMode(pin_sensorpresion_3,OUTPUT); 
//  pinMode(pin_sensorpresion_4,OUTPUT); 

}

//.............................................................................................................
//defino la logica del codigo.
void loop() {


//Despues, quiero que solo me ponga 12 volts en el pin que este probando, tambien marcandome en un led verde que se esta energizando, cuando aprete un switch a ON.
//De lo contrario, quiero que si esta en OFF, el led verde este apagado, el pin de prueba este en 0 volts, y el led rojo este prendido.

//La logica es que si el switch esta off, hay un HIGH por ser Input pullup, pero lo invierto con el "!" 
//Por ende si esta en OFF, el estado del switch es LOW
//Si el estado del switch es LOW, (osea apagado), el led rojo se energiza, y el verde no. Si el switch esta ON, el led verde se energiza, el led rojo no.
//Junto con el led verde, voy a energizar todos los pines que quiera probar. El resto de los pines deberian estar en LOW por default.

  int estado_switch_ONOFF= !digitalRead(pin_switch_ONOFF); //"!" quiere decir la inversa... Cuando uso INPUT_PULLUP, lee un HIGH si no hay voltaje. Poreso lo invierto aca.

//si el boton de la protoboard esta en "OFF", se enciende solo el led rojo, y todos los pines estan sin voltaje. 
//Comprobado que es asi.

  if (estado_switch_ONOFF == LOW){ 

  
      digitalWrite(pin_led_rojo, HIGH);
      digitalWrite(pin_led_verde, LOW);
  
        
      digitalWrite(pin_motor,LOW);
      
      digitalWrite(pin_valvula_1A,LOW);
      digitalWrite(pin_valvula_1B,LOW);
      digitalWrite(pin_valvula_3A,LOW);
      digitalWrite(pin_valvula_3B,LOW);
      digitalWrite(pin_valvula_2,LOW);

      digitalWrite(pin_sensorpresion_1,!LOW); 
      digitalWrite(pin_sensorpresion_2,!LOW);
      digitalWrite(pin_sensorpresion_3,!LOW);

  }
  
//al poner el switch de start en "ON" ,se enciende solo el led verde, y se enegrizan los pines que yo le diga (con 5V los sensores, el resto 12V). 
//los sensores les pongo el "!" (NOT) porque, por como esta puesto el circuito, si estan el LOW, hay voltaje. Entonces todo inverso con ellos.
//Comprobado que es asi.
  
  else if (estado_switch_ONOFF == HIGH){    //el doble signo = checkea en lugar de asignar. && es AND
      digitalWrite(pin_led_rojo, LOW);
      digitalWrite(pin_led_verde, HIGH);
      
      digitalWrite(pin_valvula_1A,LOW);
      digitalWrite(pin_valvula_1B,LOW);
      digitalWrite(pin_valvula_3A,LOW);
      digitalWrite(pin_valvula_3B,LOW);
      digitalWrite(pin_valvula_2,LOW);

      digitalWrite(pin_motor,HIGH);

      delay(4000);
      digitalWrite(pin_motor,LOW);
      digitalWrite(pin_sensorpresion_1,!HIGH); 
      
      delay(4000);
      digitalWrite(pin_sensorpresion_1,!LOW);
      digitalWrite(pin_sensorpresion_2,!HIGH); 

      delay(4000);
      digitalWrite(pin_sensorpresion_2,!LOW);
      digitalWrite(pin_sensorpresion_3,!HIGH); 

      delay(4000);
      digitalWrite(pin_sensorpresion_3,!LOW);
      digitalWrite(pin_valvula_1A,!HIGH); 

      delay(4000);
      digitalWrite(pin_valvula_1A,!LOW);
      digitalWrite(pin_valvula_1B,!HIGH); 

      delay(4000);
      digitalWrite(pin_valvula_1B,!LOW);
      digitalWrite(pin_valvula_3A,!HIGH); 

      delay(4000);
      digitalWrite(pin_valvula_3A,!LOW);
      digitalWrite(pin_valvula_3B,!HIGH); 

      delay(4000);
      digitalWrite(pin_valvula_3B,!LOW);
      digitalWrite(pin_valvula_2,!HIGH); 

      delay(3000);
      digitalWrite(pin_valvula_2,!LOW);

  }  }
